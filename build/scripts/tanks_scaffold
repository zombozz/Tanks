#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   tanks_scaffold start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh tanks_scaffold
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and TANKS_SCAFFOLD_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
APP_HOME=$( cd "${APP_HOME:-./}.." > /dev/null && pwd -P ) || exit

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

CLASSPATH=$APP_HOME/lib/tanks_scaffold-1.0.jar:$APP_HOME/lib/guava-28.0-jre.jar:$APP_HOME/lib/core-3.3.7.jar:$APP_HOME/lib/json-simple-1.1.1.jar:$APP_HOME/lib/json-20210307.jar:$APP_HOME/lib/minim-2.2.2.jar:$APP_HOME/lib/failureaccess-1.0.1.jar:$APP_HOME/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$APP_HOME/lib/jsr305-3.0.2.jar:$APP_HOME/lib/checker-qual-2.8.1.jar:$APP_HOME/lib/error_prone_annotations-2.3.2.jar:$APP_HOME/lib/j2objc-annotations-1.3.jar:$APP_HOME/lib/animal-sniffer-annotations-1.17.jar:$APP_HOME/lib/gluegen-rt-main-2.3.2.jar:$APP_HOME/lib/jogl-2.3.2.jar:$APP_HOME/lib/jogl-all-main-2.3.2.jar:$APP_HOME/lib/newt-main-2.3.2.jar:$APP_HOME/lib/nativewindow-main-2.3.2.jar:$APP_HOME/lib/mp3spi-1.9.5-1.jar:$APP_HOME/lib/jlayer-1.0.1-1.jar:$APP_HOME/lib/maven-javadoc-plugin-2.10.4.jar:$APP_HOME/lib/maven-toolchain-2.2.1.jar:$APP_HOME/lib/maven-archiver-2.5.jar:$APP_HOME/lib/maven-core-2.2.1.jar:$APP_HOME/lib/maven-common-artifact-filters-1.3.jar:$APP_HOME/lib/maven-project-2.2.1.jar:$APP_HOME/lib/maven-settings-2.2.1.jar:$APP_HOME/lib/maven-artifact-manager-2.2.1.jar:$APP_HOME/lib/doxia-site-renderer-1.4.jar:$APP_HOME/lib/maven-plugin-parameter-documenter-2.2.1.jar:$APP_HOME/lib/maven-profile-2.2.1.jar:$APP_HOME/lib/maven-error-diagnostics-2.2.1.jar:$APP_HOME/lib/maven-plugin-descriptor-2.2.1.jar:$APP_HOME/lib/maven-plugin-registry-2.2.1.jar:$APP_HOME/lib/maven-reporting-api-3.0.jar:$APP_HOME/lib/doxia-module-xhtml-1.4.jar:$APP_HOME/lib/doxia-module-fml-1.4.jar:$APP_HOME/lib/doxia-core-1.4.jar:$APP_HOME/lib/doxia-sink-api-1.4.jar:$APP_HOME/lib/doxia-logging-api-1.4.jar:$APP_HOME/lib/plexus-velocity-1.1.7.jar:$APP_HOME/lib/plexus-container-default-1.0-alpha-30.jar:$APP_HOME/lib/wagon-ssh-external-1.0-beta-6.jar:$APP_HOME/lib/wagon-ssh-1.0-beta-6.jar:$APP_HOME/lib/wagon-ssh-common-1.0-beta-6.jar:$APP_HOME/lib/plexus-interactivity-api-1.0-alpha-6.jar:$APP_HOME/lib/plexus-component-api-1.0-alpha-16.jar:$APP_HOME/lib/plexus-classworlds-1.2-alpha-9.jar:$APP_HOME/lib/junit-4.10.jar:$APP_HOME/lib/tritonus-share-0.3.7-2.jar:$APP_HOME/lib/jlayer-1.0.1.jar:$APP_HOME/lib/gluegen-rt-2.3.2.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-android-aarch64.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-android-armv6.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-linux-amd64.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-linux-armv6.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-linux-armv6hf.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-linux-i586.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-macosx-universal.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-solaris-amd64.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-solaris-i586.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-windows-amd64.jar:$APP_HOME/lib/gluegen-rt-2.3.2-natives-windows-i586.jar:$APP_HOME/lib/jogl-all-2.3.2.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-android-aarch64.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-android-armv6.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-linux-amd64.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-linux-armv6.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-linux-armv6hf.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-linux-i586.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-macosx-universal.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-solaris-amd64.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-solaris-i586.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-windows-amd64.jar:$APP_HOME/lib/jogl-all-2.3.2-natives-windows-i586.jar:$APP_HOME/lib/newt-2.3.2.jar:$APP_HOME/lib/newt-2.3.2-event.jar:$APP_HOME/lib/newt-2.3.2-ogl.jar:$APP_HOME/lib/newt-2.3.2-driver-android.jar:$APP_HOME/lib/newt-2.3.2-driver-bcm-old.jar:$APP_HOME/lib/newt-2.3.2-driver-bcm-vc.jar:$APP_HOME/lib/newt-2.3.2-driver-intelgdl.jar:$APP_HOME/lib/newt-2.3.2-driver-kd.jar:$APP_HOME/lib/newt-2.3.2-driver-linux.jar:$APP_HOME/lib/newt-2.3.2-driver-osx.jar:$APP_HOME/lib/newt-2.3.2-driver-win.jar:$APP_HOME/lib/newt-2.3.2-driver-x11.jar:$APP_HOME/lib/newt-2.3.2-natives-android-aarch64.jar:$APP_HOME/lib/newt-2.3.2-natives-android-armv6.jar:$APP_HOME/lib/newt-2.3.2-natives-linux-amd64.jar:$APP_HOME/lib/newt-2.3.2-natives-linux-armv6.jar:$APP_HOME/lib/newt-2.3.2-natives-linux-armv6hf.jar:$APP_HOME/lib/newt-2.3.2-natives-linux-i586.jar:$APP_HOME/lib/newt-2.3.2-natives-macosx-universal.jar:$APP_HOME/lib/newt-2.3.2-natives-solaris-amd64.jar:$APP_HOME/lib/newt-2.3.2-natives-solaris-i586.jar:$APP_HOME/lib/newt-2.3.2-natives-windows-amd64.jar:$APP_HOME/lib/newt-2.3.2-natives-windows-i586.jar:$APP_HOME/lib/nativewindow-2.3.2.jar:$APP_HOME/lib/nativewindow-2.3.2-os-win.jar:$APP_HOME/lib/nativewindow-2.3.2-os-osx.jar:$APP_HOME/lib/nativewindow-2.3.2-os-x11.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-android-aarch64.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-android-armv6.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-linux-amd64.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-linux-armv6.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-linux-armv6hf.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-linux-i586.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-macosx-universal.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-solaris-amd64.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-solaris-i586.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-windows-amd64.jar:$APP_HOME/lib/nativewindow-2.3.2-natives-windows-i586.jar:$APP_HOME/lib/hamcrest-core-1.1.jar:$APP_HOME/lib/maven-model-2.2.1.jar:$APP_HOME/lib/maven-plugin-api-2.2.1.jar:$APP_HOME/lib/maven-artifact-2.2.1.jar:$APP_HOME/lib/maven-invoker-2.2.jar:$APP_HOME/lib/wagon-file-1.0-beta-6.jar:$APP_HOME/lib/wagon-http-lightweight-1.0-beta-6.jar:$APP_HOME/lib/wagon-http-1.0-beta-6.jar:$APP_HOME/lib/wagon-webdav-jackrabbit-1.0-beta-6.jar:$APP_HOME/lib/wagon-http-shared-1.0-beta-6.jar:$APP_HOME/lib/wagon-provider-api-1.0-beta-6.jar:$APP_HOME/lib/velocity-tools-2.0.jar:$APP_HOME/lib/velocity-1.6.2.jar:$APP_HOME/lib/commons-lang-2.4.jar:$APP_HOME/lib/plexus-archiver-3.3.jar:$APP_HOME/lib/plexus-io-2.7.1.jar:$APP_HOME/lib/commons-io-2.5.jar:$APP_HOME/lib/httpclient-4.2.3.jar:$APP_HOME/lib/struts-taglib-1.3.8.jar:$APP_HOME/lib/struts-tiles-1.3.8.jar:$APP_HOME/lib/struts-core-1.3.8.jar:$APP_HOME/lib/commons-chain-1.1.jar:$APP_HOME/lib/commons-validator-1.3.1.jar:$APP_HOME/lib/commons-digester-1.8.jar:$APP_HOME/lib/commons-beanutils-1.7.0.jar:$APP_HOME/lib/jackrabbit-webdav-1.5.0.jar:$APP_HOME/lib/commons-httpclient-3.1.jar:$APP_HOME/lib/commons-logging-1.1.1.jar:$APP_HOME/lib/log4j-1.2.14.jar:$APP_HOME/lib/qdox-1.12.1.jar:$APP_HOME/lib/maven-repository-metadata-2.2.1.jar:$APP_HOME/lib/plexus-sec-dispatcher-1.3.jar:$APP_HOME/lib/doxia-decoration-model-1.4.jar:$APP_HOME/lib/plexus-i18n-1.0-beta-7.jar:$APP_HOME/lib/plexus-utils-3.0.24.jar:$APP_HOME/lib/slf4j-jdk14-1.5.6.jar:$APP_HOME/lib/jcl-over-slf4j-1.5.6.jar:$APP_HOME/lib/commons-cli-1.2.jar:$APP_HOME/lib/maven-monitor-2.2.1.jar:$APP_HOME/lib/classworlds-1.1.jar:$APP_HOME/lib/plexus-interpolation-1.15.jar:$APP_HOME/lib/backport-util-concurrent-3.1.jar:$APP_HOME/lib/plexus-component-annotations-1.6.jar:$APP_HOME/lib/commons-collections-3.2.1.jar:$APP_HOME/lib/httpcore-4.2.2.jar:$APP_HOME/lib/commons-codec-1.6.jar:$APP_HOME/lib/commons-compress-1.11.jar:$APP_HOME/lib/snappy-0.4.jar:$APP_HOME/lib/xz-1.5.jar:$APP_HOME/lib/slf4j-nop-1.5.3.jar:$APP_HOME/lib/slf4j-api-1.5.6.jar:$APP_HOME/lib/jsch-0.1.38.jar:$APP_HOME/lib/plexus-cipher-1.4.jar:$APP_HOME/lib/xercesImpl-2.9.1.jar:$APP_HOME/lib/oro-2.0.8.jar:$APP_HOME/lib/dom4j-1.1.jar:$APP_HOME/lib/sslext-1.2-0.jar:$APP_HOME/lib/xercesMinimal-1.9.6.2.jar:$APP_HOME/lib/nekohtml-1.9.6.2.jar:$APP_HOME/lib/jackrabbit-jcr-commons-1.5.0.jar:$APP_HOME/lib/xml-apis-1.3.04.jar:$APP_HOME/lib/antlr-2.7.2.jar


# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    if ! command -v java >/dev/null 2>&1
    then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and TANKS_SCAFFOLD_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi


# Add default JVM options here. You can also use JAVA_OPTS and TANKS_SCAFFOLD_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# Collect all arguments for the java command:
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
#     and any embedded shellness will be escaped.
#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
#     treated as '${Hostname}' itself on the command line.

set -- \
        -classpath "$CLASSPATH" \
        Tanks.App \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $TANKS_SCAFFOLD_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"
